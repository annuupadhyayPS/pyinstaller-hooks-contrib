name: Scheduled CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [push]
  #workflow_dispatch:
  #schedule:
    #- cron: '0 18 * * FRI'
  #pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.8]
        pyinstaller: ["https://github.com/pyinstaller/pyinstaller/archive/develop.zip"]
        os: ["ubuntu-latest"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Limit dependencies to only new/changed libraries.
        if: "${{ github.event.pull_request }}"
        shell: bash
        run: |
          git fetch origin ${{ github.base_ref }}
          set +e
          diff --changed-group-format='%>' --unchanged-group-format='' \
            <(git show origin/${{ github.base_ref }}:requirements-test-libraries.txt) \
            <(git show HEAD:requirements-test-libraries.txt) \
          > requirements-test-libraries.txt
          set -e
          echo '-r requirements-test.txt' >> requirements-test-libraries.txt
          cat requirements-test-libraries.txt

      - name: Set up .NET Core for pythonnet tests
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.x'

      - name: Install apt dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          # Set up a virtual screen (for GUI libraries and pynput).
          sudo apt-get install libxcb-xkb-dev xvfb
          Xvfb :99 & echo "DISPLAY=:99" >> $GITHUB_ENV
          # Install mariadb dependencies.
          sudo apt-get install -y libmariadbclient-dev

      - name: Install dependencies
        run: |
          # Upgrade to the latest pip.
          python -m pip install -U pip setuptools wheel

          # Install hooks-contrib
          pip install -e .
          pip install --prefer-binary -r requirements-test-libraries.txt

          # Install PyInstaller
          pip install ${{ matrix.pyinstaller }}

      - name: Run tests
        run: pytest -v
        
  test-aarch64:
    name: "Test ${{ matrix.pyver }} aarch64"
    strategy:
      matrix:
        pyver: [cp38-cp38]
        pyinstaller: ["https://github.com/pyinstaller/pyinstaller/archive/develop.zip"]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      py: /opt/python/${{ matrix.pyver }}/bin/python
      img: quay.io/pypa/manylinux2014_aarch64
    steps:
    - name: Checkout
      uses: actions/checkout@v2    
    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Checkout submodules
      run: |
        git submodule init
        git submodule update
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    
    - name: Install all dependencies
      run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
            arm64v8/ubuntu \
            bash -exc 'apt update && \
            uname -m && \
            apt-get install sudo && \
            sudo apt-get install -y libxcb-xkb-dev xvfb && \
            sudo apt-get install -y libmariadbclient-dev && \
            sudo apt-get install -y python3.8 && \
            python3.8 -m pip install --upgrade pip setuptools wheel && \
            python3.8 -m pip install -e . && \
            python3.8 -m pip install --prefer-binary -r requirements-test-libraries.txt && \
            python3.8 -m pip install ${{ matrix.pyinstaller }} && \
            python3.8 -m pip install pytest && \
            python3.8 -m pytest -v'
